# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QApplication, QTreeView, QFileDialog
from PyQt5.Qt import QFileSystemModel
from PyQt5.QtCore import pyqtSlot
import os
import shutil
import test_ui_im

class Ui_Dialog(object):

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(723, 561)
        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog)
        self.buttonBox.setGeometry(QtCore.QRect(340, 490, 341, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")

        self.checkBox = QtWidgets.QCheckBox(Dialog)
        self.checkBox.setGeometry(QtCore.QRect(610, 30, 91, 21))
        self.checkBox.setObjectName("checkBox")


        self.model_and_path = QFileSystemModel()
        # self.model.setRootPath(self.path_root)
        self.model_and_path.setRootPath("D:")
        self.index_root_and = self.model_and_path.index(self.model_and_path.rootPath())
        self.AndtreeView = QtWidgets.QTreeView(Dialog)
        self.AndtreeView.setModel(self.model_and_path)
        self.AndtreeView.setGeometry(QtCore.QRect(30, 140, 291, 192))
        self.AndtreeView.setObjectName("AndtreeView")
        self.AndtreeView.clicked.connect(self.on_AndtreeView_clicked)

        self.model_fac_path = QFileSystemModel()
        self.model_fac_path.setRootPath("C:")
        self.index_root_fac = self.model_fac_path.index(self.model_fac_path.rootPath())
        self.FactreeView = QtWidgets.QTreeView(Dialog)
        self.FactreeView.setModel(self.model_fac_path)
        self.FactreeView.setGeometry(QtCore.QRect(370, 140, 291, 192))
        self.FactreeView.setObjectName("FactreeView")
        self.FactreeView.clicked.connect(self.on_FactreeView_clicked)

#button Setting

        self.And_path_bt = QtWidgets.QPushButton(Dialog)
        self.And_path_bt.setGeometry(QtCore.QRect(30, 100, 120, 23))
        self.And_path_bt.setObjectName("And_path_bt")
        self.And_path_bt.clicked.connect(self.showDialog_AndPath)

        self.FacOS_path_bt = QtWidgets.QPushButton(Dialog)
        self.FacOS_path_bt.setGeometry(QtCore.QRect(370, 100, 120, 23))
        self.FacOS_path_bt.setObjectName("FacOS_path_bt")
        self.FacOS_path_bt.clicked.connect(self.showDialog_FacPath)

        self.pushButton_3 = QtWidgets.QPushButton(Dialog)
        self.pushButton_3.setGeometry(QtCore.QRect(610, 60, 75, 23))
        self.pushButton_3.setObjectName("pushButton_3")

#Text Browser setting
        self.textBrowser = QtWidgets.QLineEdit(Dialog)
        self.textBrowser.setGeometry(QtCore.QRect(30, 350, 291, 31))
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser.setText("test Default")
        #self.textBrowser.overwriteMode()

        self.textBrowser_2 = QtWidgets.QLineEdit(Dialog)
        self.textBrowser_2.setGeometry(QtCore.QRect(370, 350, 291, 31))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.textBrowser_2.setText("test Default")
        #self.textBrowser_2.overwriteMode()

        self.bt_open_and = QtWidgets.QPushButton(Dialog)
        self.bt_open_and.setGeometry(QtCore.QRect(220, 385, 100, 20))
        self.bt_open_and.setObjectName("bt_movepaht_and")
        self.bt_open_and.clicked.connect(self.open_path_url_and)

        self.bt_open_fac = QtWidgets.QPushButton(Dialog)
        self.bt_open_fac.setGeometry(QtCore.QRect(560, 385, 100, 20))
        self.bt_open_fac.setObjectName("bt_movepaht_fac")
        self.bt_open_fac.clicked.connect(self.open_path_url_fac)


        """
        self.horizontalScrollBar = QtWidgets.QScrollBar(Dialog)
        self.horizontalScrollBar.setGeometry(QtCore.QRect(20, 380, 271, 21))
        self.horizontalScrollBar.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalScrollBar.setObjectName("horizontalScrollBar")
        """
        # ------------------TEMP BT--------------------------------------------------
        self.bt_temp1 = QtWidgets.QPushButton(Dialog)
        self.bt_temp1.setGeometry(QtCore.QRect(30, 420, 113, 20))
        self.bt_temp1.setObjectName("temp_bt1")
        self.bt_temp1.clicked.connect(self.file_cp)

        self.bt_temp2 = QtWidgets.QPushButton(Dialog)
        self.bt_temp2.setGeometry(QtCore.QRect(30, 440, 113, 20))
        self.bt_temp2.setObjectName("temp_bt2")

        self.bt_temp3 = QtWidgets.QPushButton(Dialog)
        self.bt_temp3.setGeometry(QtCore.QRect(30, 460, 113, 20))
        self.bt_temp3.setObjectName("temp_bt3")

        self.bt_temp4 = QtWidgets.QPushButton(Dialog)
        self.bt_temp4.setGeometry(QtCore.QRect(30, 480, 113, 20))
        self.bt_temp4.setObjectName("temp_bt4")
        self.bt_temp4.clicked.connect(self.run_os_system)

        #--------------------------------------------------------------------
        self.retranslateUi(Dialog)
        self.buttonBox.accepted.connect(Dialog.accept)
        self.buttonBox.rejected.connect(Dialog.reject)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.And_path_bt.setText(_translate("Dialog", "And_path_open"))
        self.FacOS_path_bt.setText(_translate("Dialog", "FacOS_path_open"))
        self.checkBox.setText(_translate("Dialog", "Secure"))
        self.pushButton_3.setText(_translate("Dialog", "PushButton"))
        self.bt_temp1.setText(_translate("Dialog", "file cp test"))
        self.bt_temp2.setText(_translate("Dialog", "temp2"))
        self.bt_temp3.setText(_translate("Dialog", "temp3"))
        self.bt_temp4.setText(_translate("Dialog", "calc cmd test"))
        self.bt_open_and.setText(_translate("Dialog", "open_Android"))
        self.bt_open_fac.setText(_translate("Dialog", "open_Facos"))

    def showDialog_AndPath(self):
        #fname = QFileDialog.getOpenFileName(self, 'Open file', 'd:')
        #fname = QFileDialog.getOpenFileName(self, 'Select Directory', 'd:')
        print("clik and path bt")
        fname = QFileDialog.getExistingDirectory(self.And_path_bt, 'Select Directory', 'd:')
        print(fname)
        self.model_and_path.setRootPath(fname)
        self.index_root_and = self.model_and_path.index(self.model_and_path.rootPath())
        self.AndtreeView.setRootIndex(self.index_root_and)
        self.textBrowser.setText(fname)

    def showDialog_FacPath(self):
        fname = QFileDialog.getExistingDirectory(self.And_path_bt, 'Select Directory', 'd:')
        print(fname)
        self.model_fac_path.setRootPath(fname)
        self.index_root_fac = self.model_fac_path.index(self.model_fac_path.rootPath())
        self.FactreeView.setRootIndex(self.index_root_fac)
        #self.AndtreeView.setModel(self.model_and_path)
        self.textBrowser_2.setText(fname)

    #@pyqtSlot(QtCore.QModelIndex)
    def on_AndtreeView_clicked(self, index):
        indexItem = self.model_and_path.index(index.row(), 0, index.parent())
        filePath = self.model_and_path.filePath(indexItem)
        self.textBrowser.setText(filePath)

    #@pyqtSlot(QtCore.QModelIndex)
    def on_FactreeView_clicked(self, index):
        indexItem = self.model_fac_path.index(index.row(), 0, index.parent())
        filePath = self.model_fac_path.filePath(indexItem)
        self.textBrowser_2.setText(filePath)

    def open_path_url_and (self):
        urlpath = self.textBrowser.text()
        print(urlpath)
        self.model_and_path.setRootPath(urlpath)
        self.index_root_and = self.model_and_path.index(self.model_and_path.rootPath())
        self.AndtreeView.setRootIndex(self.index_root_and)

    def open_path_url_fac (self):
        urlpath = self.textBrowser_2.text()
        print(urlpath)
        self.model_fac_path.setRootPath(urlpath)
        self.index_root_fac = self.model_fac_path.index(self.model_fac_path.rootPath())
        self.FactreeView.setRootIndex(self.index_root_fac)

    def file_cp(self):
        print("test file copy")
        src_path = self.textBrowser_2.text()
        print(src_path)
        src_path = src_path + '\*'
        target_path = self.textBrowser.text()
        print(src_path)
        print(target_path)
        #self.copyDirTree(src_path,target_path)
        temp_cmd = 'copy '+ src_path + ' ' + target_path
        #shutil.move(src_path, target_path)
        #shutil.copy(src_path, target_path)
        os.system(temp_cmd)

        #check_Facview = self.FactreeView.state()
        #print(check_Facview)

    def copyDirTree(root_src_dir, root_dst_dir):
        """
        Copy directory tree. Overwrites also read only files.
        :param root_src_dir: source directory
        :param root_dst_dir:  destination directory
        """

        for src_dir, dirs, files in os.walk(root_src_dir):
            dst_dir = src_dir.replace(root_src_dir, root_dst_dir, 1)
            if not os.path.exists(dst_dir):
                os.makedirs(dst_dir)
            for file_ in files:
                src_file = os.path.join(src_dir, file_)
                dst_file = os.path.join(dst_dir, file_)
                if os.path.exists(dst_file):
                    try:
                        os.remove(dst_file)
                    except PermissionError as exc:
                        os.chmod(dst_file, stat.S_IWUSR)
                        os.remove(dst_file)

                shutil.copy(src_file, dst_dir)

    def run_os_system(self):
        path = "calc"
        os.system(path)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()

    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    #test_ui_im.retranslateUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
